20240604 시퀀스 다이어그램 / 유스케이스 다이어그램

---

직접 찾아보면서 끝까지 달라붙어보라는 조언
- 중간에 포기하는 건 결국 정체되는 계기가 될 뿐
- 정리를 잘해놔야 한다
	- 외우는 건 한계가 있음

---

소프트웨어 설계 
- 유지 보수의 핵심이 소프트웨어 설계

---

경력자 면접에서는 에릭 감마, 제임스 고슬링 등 개발자명을 언급하는 게 상당히 좋음

---

이클립스 제작

---

소프트웨어 설계론에 대해서는 나와있지만, 
어떻게 설계해야 하는지에 대해서는 기본적으로 경험을 가지고 있어야 한다.

---

회사에서 기본적으로 만드는 설계도
- 시퀀스 다이어그램
- 유스케이스 다이어그램

---

시퀀스 다이어그램
	- 시간 순서대로 활용되는 객체를 그리는 것
	- 뷰, 서비스, 맵퍼, DB  
	- 이외 추가되는 요소가 있다면 서비스 부분에서 추가될 것
	- 너무 해당 부분에 매몰되지 말라고..

---

유스케이스 다이어그램
	- 시스템에서 제공해야 하는 기능이나 서비스를 명세한 다이어그램
	- 사용자와 시스템 사이의 상호작용에 집중하는 것이 특징
	- 외부에서 본 시스템의 기능을 표현
	-> 실제 내부 비즈니스 로직이 아닌, 사용자가 수행하는 기능을 파악하고 싶을 때 작성함
	- 구조 : 벡터(졸라맨 그림 : 사용자) + 시스템(객체) + 유스케이스(함수) 
	- 관계 : 포함(필수적 요구), 확장(선택적 관계), 일반화
	- 함수 간 관계를 <<include>>와 <<exclude>> 등으로 표현. 일반화는 상속을 표현.

---

- https://googry.tistory.com/2 를 통해 유스케이스 다이어그램의 관계를 이해하기

---
