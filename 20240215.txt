20240215 웹 프로그래밍

- HTML과 jsp의 차이

jsp 파일은
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>
해당 코드를 보유하고 있다.

해당 코드 보유 시, tomcat이 해당 파일을 java로 변환시킨다.
---
jsp 파일에서 뜬금없이 컴파일 에러가 뜨는 경우가 꽤 있다.
이를 위해서 Catalina 파일 접근을 포함한 컴파일 루트를 알아본 것이지만,
다시 코드를 재작성하면 풀리는 경우도 꽤 많다.
---
<% %> : java 문법을 적용시키는 부분
---
<%! %> : 선언(declaration)
선언만 모을 수 있는 공간. 
밑에서 적용하는 <% %>에 가져다 사용할 수 있는 선언들을 모아놓는 곳.
---
<%=  %> : 표현식(expression) 
변수값 혹은 메서드 호출 값 표현.
out.println()을 통한 표현식을 생략할 수 있도록, 표현식이란 문법을 제공한 것.
활용 시 주의점 : 값을 표현한 뒤 세미콜론이 오지 않는다. 값만 반환하는 문법으로 정해져 있다.
---
<%@ %> : 지시자 
JSP페이지의 전체적인 속성을 지정할 때 사용
- page 지시자 : 페이지 속성 지정 시 사용
<%@ page import="java.util.Arrays"%>
<%@ page language="java" contentType="text/html; charset=UTF-8"
    pageEncoding="UTF-8"%>

- include 지시자 : 현재 페이지내에 다른 페이지를 삽입할 때 사용. file속성을 이용
<%@ include file="gugudan.jsp" %>

- taglib 지시자 : 태그 라이브러리를 사용하기 위해 이용하는 지시자.
추후에 다시 언급
---
주석
HTML 주석 : <!-- -->
jsp 주석 : <%-- --%> 혹은 <% %> 내에 자바 언어의 주석(//, /* */) 사용하는 것도 가능.
---
chrome web browser는 기본적으로 jsp 호출 요청 시 get 방식으로 요청한다.
---
url : 전체 주소
uri : 웹주소와 포트 번호를 뺀 나머지 주소.
---
web browser에서 request를 할 때, 해당 정보를 같이 보낸다.
	out.println("URL:" + request.getRequestURL() + "<br>");
	out.println("URI:" + request.getRequestURI() + "<br>");
	out.println("컨텍스트 패스:" + request.getContextPath()+ "<br>");
이 세가지는 꼭 알고 있으라고 한다. 나머지도 있지만...
---
jsp에서 제공하게 되는 내장 객체 중, 개발자들이 많이 쓰는 객체 5개

request
response
error
session
out
---
개발자들은, 소스 코드를 구성할 때 복잡한 과정은 객체 내에서 진행되도록 만드는 편.
.html은 페이지, .jsp는 받은 데이터 전달 및 출력, .java는 계산 및 처리를 담당하는 클래스 코드.
---
