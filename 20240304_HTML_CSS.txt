20240304_HTML_CSS 선택자

---

<!DOCTYPE html>에서, !DOCTYPE이 HTML5를 의미한다고 한다.

---

div : 묶기 위한 태그

---

선택자 : 특정 태그를 선택하여, 해당 태그의 속성을 변경 하는 목적으로 사용 

---

* : 전체 선택자

---

전체와 특정 태그 혼합하기 
- 실무에서도 많이 적용되어 있음.
- CSS에서는 맨 처음부터 시작하고, 마지막이 제일 나중에 적용된다.
-> 모든 기본 적용 사항을 초반에 설정하고, 이후에 세부적으로 들어가는 것이 좋다.

---

Holy Grail Layout
- 헤더(Header) 
- 푸터(Footer) 
- 왼쪽 사이드바(Left Sidebar) 
- 오른쪽 사이드바(Right Sidebar)
- 중앙 컨텐츠(Contents)

형태의 레이아웃

---

float : left
- 해당 속성은 요소를 페이지의 왼쪽이나 오른쪽으로 띄우는 데 사용
-> 요소를 다른 요소 주위로 흐르게하여 요소가 다른 요소와 나란히 배치되도록 함.
- 원래 이미지를 텍스트 주위로 띄우는 용도로 만들어짐.
-> 현재는 다양한 레이아웃을 만드는데 주로 사용
-> 일부 예상치 못한 동작이 발생할 수 있음(ex : 부모 요소가 자식 요소의 높이를 정확하게 계산하지 못하는 경우)
-> 이를 막기 위해, overflow 속성을 활용

---

overflow: hidden 
- 부모 요소가 자식 요소의 크기와 위치를 올바르게 인식할 수 있음
-> 부모 요소가, 자식 요소의 내용이나 레이아웃에 따라 동적으로 조절되어야 할 때 유용

---

clear: both
- 주로, float 속성을 사용한 요소의 아래에 다른 요소들이 어떻게 배치될지를 지정하는 데 사용
-> 위에서 float를 활용해버리면, 아래 요소들을 순서대로 배치하려면 clear:both를 다 선언해야 하는 상황이 나오게 됨.

---

float 속성 사용 시
-> 부모 태그에는 overflow : hidden를 선언 및 할당
-> 이후 태그들엔 clear:both를 선언 및 할당
이 강제된다.

물론 위와 같은 문제점은 밑에 있는 요소들을, 다른 부모 요소로 묶어서 clear:both를 선언하는 방법으로 
해결할 수 있다.

---

float 속성을 사용한 요소들을 감싸는 부모 요소를 clearfix라고 부름.
float 속성이 가지는 위와 같은 문제점 때문에, 최신 CSS 레이아웃 기술인 Flexbox나 Grid를 사용하는 것이 더 권장됨.
- 이는 챗 gpt에서 발췌한 의견들. 

---

input{
}

input[type=text]{
}

위처럼, 속성별로 나눠서 css를 부여할 수도 있다.

---

파일을 건내받으면, 최대한 먼저 훑어보며 분석하는 습관을 가지도록 하라. 무엇을 해야 하는지 가닥을 잡기가 좋다.

---

후손, 자손 선택자(>, )
- 부모 자식 후손 관계끼리 범위를 정하는 것
- A>B : A 의 자식 B 형태(자식은 A 바로 밑에 있는 요소를 말함)
```
 	div > h1{
	     font-weight: bold;
	     color: yellow;
	}
```
- A B : A 밑에 있는 모든 후손들(자식 포함)
```
	div li{
	     background-color: red;
	}
```

---

동위 선택자(~,+)
- 부모 자식 관계가 아닌, 동등한 태그들끼리 범위를 정하는 것
- A~B : 모든 동등한 관계의 태그들
```
        h3~div{
            font-size: 10px;
            color: orange;
        }
```
- A+B : A와 바로 이어진 동등 관계의 태그
```
        h3+div{
            font-size: 20px;
            font-weight: bold;
            color: blue;
        }
```
---

hover : 동작 태그.
- 반응 선택자 중 하나. 거의 이것만 쓴다고 한다.
- 마우스를 올려놓다라는 뜻을 가진 영단어.
- 마우스를 올렸을 때, 태그 글씨 색 변화를 위해 설정.
```
        li:hover{
            color: blue;
        }
```

---

상태 선택자
- 상태에 따라 CSS 설정
- focus : 선택된 상태
```
        input:focus{
            border: 2px solid #ff0000;
            padding: 10px;
        }
```

---

구조 선택자
- 구조에 따라 CSS 설정
- nth-child() : 함수. CSS에서 사용되며, 특정 요소의 자식 요소 중에서 몇 번째에 해당하는 요소를 선택하는 데 사용.
```
        ul li:nth-child(2n+1){
            background-color: #de9393;
        }
```

---

id는 유일무이해야 하고, class는 중복되어도 상관없다.

---

html에서 중요한 것 : block tag와 inline tag를 구분하는 것
block은 block 단위만큼 공간 차지,
inline은 내용물의 크기만큼 공간 차지.

---

자식 태그에 float 사용 시, 부모 태그에 overflow: hidden을 주고 
이어지는 태그들이 해당 부분에 영향받지 않도록 설정하려면 해당 태그들에 clear:both를 써주면 된다.

---

float는 띄워놓은 상태로 만들어서, 태그 자체 속성을 무시하고 나란히 놓고자 할 때 사용.

---

문자 선택자
- 문자, 문자열 단위로 CSS 속성 설정 가능

```
        #history2::first-letter, #history1::first-letter{
            font-size: 2em;
        }
```

---

물리적 단위 : cm, m 등
가변적 단위 : px, em 등

---

px는 물리적 단위인가, 가변적 단위인가?
- px : pixel
-> 해상도 : 화면에 표시되는 픽셀의 수. 픽셀은 단위이다.
- 실제 픽셀 크기는 분명 물리적인 단위이다. 
-> CSS에서는, px 단위가 실제 픽셀 크기와 다를 수 있다는 개념이 더 받아들여지는 중

---

em 
- 개발자가 정하지 않으면, 브라우저에서 자체적으로 정해서 내보낸다.
-> default 값이 있다.
- 각각의 브라우저가 가진 폰트 크기가 기본값. 보통 16px.
- 부모 요소의 폰트 크기에 따라 상대적으로 크기가 결정됨.

---

margin : auto; 
- 가운데 정렬

border-radius : 30px;
/* border-radius: 30px 30px 30px 30px; */
- 모든 모서리 둥글게 만들기




