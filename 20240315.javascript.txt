2024-03-15 부트스트랩 팁, javascript

---

게시판의 글 폼
-> 부트스트랩 - 폼을 활용

---

로또, 가위바위보, 게시판 만들기

--- 

vertical-alignment 유틸리티를 사용하여 요소의 정렬을 변경하기.
-> 수직 정렬은 인라인, 인라인 블록, 인라인 테이블 및 테이블 셀 요소에만 영향을 미친다.

- CSS를 통한 해결방법은 "style = vertical-align : middle"
- 부트스트랩에서 제공하는 수직 가운데 정렬 클래스는 .align-middle이다
둘 중 하나로 해결하기.

---

자바스크립트 : 동적인 HTML 페이지를 만들기 위해 고안된 프로그래밍 언어
- 자바와는 전혀 관계가 없다고 한다.(이름에 자바가 들어가는 것 뿐)
- 기본적인 웹브라우저들이 해석할 수 있도록 만든 프로그래밍 언어.
-> 코딩한 프로그래밍 언어를 해석하여 웹브라우저에서 자체적으로 처리할 수 있다.
- 클라이언트 언어라고 표현. 
- HTML과 거의 동시에 나왔다고.

---

시장 점유율은 php가 제일 높은 편이라고. 
그러나, javascript의 점유율이 점점 상승하고 있는 것도 맞다.

---

처음엔 자바스크립트에 대한 취급이 좋진 않았다고.
- front에 대한 용어 자체가 생긴지 얼마 안됐다고.

---

vue
react
angular 
- 자바스크립트 기반 프레임워크

---

자바스크립트 사용 방법 
1. html 내장객체를 활용하여 자바스크립트를 사용할 수 있다.
- window 객체는 객체명 생략 가능.
2. .js(자바스크립트 파일)을 만들어서 삽입.

---

디버깅은 실행된 페이지 F12 - 소스 부분을 통해 진행

---

compile language 
- java, C언어 등
- 컴파일 과정, 실행 과정 진행
-> 번역과 실행이 따로 이루어짐.

interpreter language
- javascript, 파이썬 등
- 컴파일 과정 없음. 위에서 한 줄씩 읽어서 바로 실행.
-> 번역과 실행이 동시에 이루어짐.

---

입력, 출력
- 입력 :
1. window.prompt() 활용
	- 예시 : window.prompt("입력창입니다.","문장을 입력하세요.");
	- 첫 매개변수는 안내문장, 두번째 매개변수는 입력하는 부분에 서술되는 문장.
	- 입력창이 뜬다.
2. window.confirm() 활용
	- 예시 : window.confirm("진행하겠습니다.");
	- 입력창처럼 따로 창이 뜨지만, 클라이언트가 따로 입력하는 입력 부분은 없음.
	- 안내 문장만 노출시키고자 할 때 사용. 

- 출력
1. console.log() 활용
	- 자바로 치면 System.out.println()과 동일
	- 디버깅을 위해 자주 사용
	-> 웹페이지의 F12 - 콘솔 부분에서 확인 가능.
2. document.write() 활용
	- 웹페이지에 출력된다.
---

자바스크립트의 사용 목적
- 데이터베이스에 접근하지 않고도 CRUD가 가능.
- 서버와 통신하고자 할 때, jquary ajax 비동기 통신에 사용한다고 하던데... 이건 따로 공부해야겠다.

---

자바스크립트에서는 문법적으로 세미콜론을 넣어도 되고 안넣어도 된다.
- 문법적으로 해석이 안되는 경우가 있으므로 일단은 넣도록 하자.
주석은 자바와 동일.

---

프로그래밍 언어 : 변수, 반복문이 기본적으로 존재.

---

문자열, 숫자, boolean 
- 사람에 따라 데이터 타입에 대해 얘기하는 게 다르다고.
- 기본적으로는 7개라고 한다.

파이썬에서는 변수 앞에, 데이터 타입이 없다고 한다.

---

자바스크립트 : 1995년 12월 브렌던 아이크(Brendan Eich)가 개발.

ES6 이전까지는 class 미지원. 2015년부터 class 지원하기 시작.

---

자바스크립트에서는 
- this의 개념이 다르다.
- hosting이란 개념이 없다.

---

변수 선언 시 사용하는 타입
- var : 기존에 사용하던 변수 타입
- let : this 개념 때문에 let이 나왔다고 한다.
- const : java로 비유하자면, final이라고 보면 된다. 상수.

---

자바스크립트에서는, 변수의 타입으로는 데이터 타입을 알 수 없다.
-> 입력값을 확인하여 데이터 타입을 확인한다.
-> 변수 타입에 속아, 형변환을 하지 않는 경우가 상당히 많은데 그러지 않도록 한다.

---

데이터 타입
- 문자열형(문자형) 
	- 자바스크립트에서는 입력값에 ""를 넣든, ''를 넣든 같은 것으로 취급한다.
	-> 문자열형에 속한다.
- 숫자형(정수 + 실수)
- 불린형(boolean)
- 함수형
- 객체형
- undefined 
	- 자바로 치면 null. 입력값이 들어가지 않은 상태.
- symbol

---

자바스크립트나, 파이썬이나 내부적으로 모든 변수는 참조형이다.
- 4byte의 메모리 공간을 가지고 있음
- 이렇게 만든 이유? 기능을 제공하는 메서드들을 포함시키기 위함 아닐까...
- 자바로 치면, 기본 자료형과 대비되는 wrapper class로 생각하면 이해가 쉽겠다.

---

typeof() 
- 변수 내 입력값 데이터 타입을 알 수 있음.

---

prompt()로 입력된 값은 무조건 문자형 데이터 타입이다.
-> 계산이 필요하다면 숫자형으로 형변환해야 한다.

---

if문, switch문은 자바와 똑같다.

if - true, false 여부를 따질 땐 무조건 if
switch - 정수값에 따라 따짐. 

JavaScript의 switch 문은 Java 7 이전의 Java의 switch 문과 유사하다고 볼 수 있다.

---

자바스크립트에서는 문자열도 연산이 가능하다.

- 문자열의 크기는 사전에 나열된 순서로 비교.(사전 페이지가 클수록 문자열의 보유 숫자도 크다.)
- 자바에서는 compareTo()를 통해 두 문자열 간 크기 비교 가능. 

---

