20240329 Spring 

프레임워크 / 플랫폼의 차이

- 프레임워크
	- 소프트웨어 개발을 위한 구조적인 틀이나 특정 기능을 제공
	- 약속된 프로그래밍 틀
	- jsp/servlet , spring 등

- 플랫폼
	- 소프트웨어가 실행되는 환경을 제공하는 하드웨어나 소프트웨어의 조합
	- 비즈니스적인 면도 담겨있는 용어
	
---

모든 프로그래밍 언어에서, 함수라는 문법을 제공한다.

---

함수 -> 클래스 -> 라이브러리(네트워크,파일,IO) -> 프레임워크 = 플랫폼 컴포넌트

라이브러리 : 재사용 가능한 코드의 집합

---

Spring 학습 이전에, java언어 및 jsp/servlet에 대한 선행학습이 반드시 필요
- html, javascript, jquery, css 등 스크립트 언어에 대한 기본적 학습 또한 필요

---

면접 시, 모릅니다라는 표현은 지양하기.
-> 공부하고 있습니다, 공부할 예정입니다 등으로 표현하기

---

공공기관은 oracle, mysql도 안씀
- db는 티베로를 쓴다.
-> 티베로는 제우스를 만든 tmax에서 만듦
-> 국산 소프트웨어

---

Spring의 특징
- 업데이트 속도가 상당히 빠른 편
- 기능이 방대하다.
-> 그 중 현업에서 사용하는 건 딱 정해져 있는 상태.

Spring의 장점

- 정형화 : 일정수준이상의 품질을 기대
- 유지보수가 쉽다.
- 개발자에게 기본적인 패턴(DI, AOP, 서비스 추상화)등을 강제 시킴
- 유연성
- 각 모듈을 조립(설정을 통한)하면 기능을 쉽게 구현
- 모듈 추가 제거 및 관리가 수월.

Spring의 단점
- 습득시간이 오래걸림.
- 스프링 설정하는 것에만 익숙해지다보니 코딩 실력이 떨어지게됨.
- 무겁다.

---

maven project 만들 때 
- 경로에 한글이 섞여있으면 안된다. 

- group id : 프로젝트가 속하게 되는 그룹
- artifact id : 프로젝트명
-> group id + artifact id = 패키지명

-> artifact id명으로 구성되는 프로젝트 파일이 생성된다.

---

Spring에서 기본적으로 외워둬야 하는 개념
- DI
- IOC
- IOC 컨테이너

Spring에서 강제시키는 개념일 뿐, Spring 이전에도 해당 개념들과 관련된 부분은 언급되어왔다.

---

Spring 제작자 중 하나 - 로드 존슨

---

DI (dependency Injection)
- 의존성 주입
- 의존성이란? 
	- 한 요소가 다른 요소에 의존하여 작동하거나 영향을 받는 것
	- 객체 간의 관계를 얘기하는 경우가 많음.
	가정 1 : 객체 A 내 멤버 중 객체 타입을 가진 멤버 B가 있는 경우
	-> 해당 객체A는 그 멤버B에 의존성을 가짐.

- 가정 1에서, B 멤버 값을 넣는 방법
	- B의 생성자 함수로 직접 생성
	- 함수를 통해 B 멤버에 대입 -> 주입이라고 표현

- 의존성 주입
	- 객체 A 내 멤버 중 객체 타입을 가진 멤버 B가 있는 경우, 함수를 통해 멤버 B에 해당 객체를 대입하는 것
	-> 그러면 멤버 B에 담기는 객체는 어디서 넣어주는 것인가? 
	-> A 내부가 아니라 A 외부에서 주입하는 것.
	-> 주입은 다른 객체가 주체가 된다.

---

IoC (Inversion of Control)
- 제어의 역전
- 간단하게 생각하면, 객체 호출 순서가 반대가 된다.
	
- 소프트웨어 컴포넌트의 제어 흐름이 뒤바뀌는 디자인 원칙
		
- 해당 부분으로 인해, 조립을 통한 기능 구현이 가능

---

IOC 컨테이너
- IOC를 구현하는 프레임워크나 라이브러리에서 제공하는 컨테이너

주요 역할
- 객체 생성 및 관리
- 의존성 주입
- 제어의 역전

---

maven 
- 빌드 툴
- 다른 빌드 툴로는 gradle이 있다.

- Spring은 maven을 많이 사용. 안드로이드에서는 gradle을 많이 사용.

작성 -> 컴파일 -> 실행 -> 테스트 -> 배포

해당 전체 과정을 빌드라고 한다.

즉, 빌드 툴은 빌드를 도와주는 툴이라고 보면 된다.

---

